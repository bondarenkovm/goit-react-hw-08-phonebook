{"version":3,"file":"static/js/516.5b4a94f3.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/Contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.stuled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilterValue = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContact = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    // const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { Form as FormikForm, ErrorMessage as Message } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\nexport const ErrorMessage = styled(Message)`\n  color: red;\n  margin-left: auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 15px;\n  font-weight: 500;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  background-color: green;\n  transition: 250ms;\n  margin-left: auto;\n  margin-right: auto;\n  :hover {\n    scale: 1.05;\n  }\n  :active {\n    scale: 0.95;\n    background-color: blue;\n  }\n  :disabled {\n    background-color: red;\n    color: black;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { selectContacts } from 'redux/Contacts/selectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Label, Button, Form, ErrorMessage } from './ContactForm.styled';\nimport { toast } from 'react-hot-toast';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'The name may contain only letters!!!'\n    )\n    .min(3, 'Too short')\n    .max(15, 'Too long')\n    .required('Required')\n    .trim(),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits!!!'\n    )\n    .min(5, 'Too short')\n    .max(10, 'Too long')\n    .required('Required')\n    .trim(),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (contacts.some(({ name }) => name === values.name)) {\n      toast(`${values.name} is alreary in contacts`, {\n        style: {\n          background: '#ca1616',\n          color: '#fff',\n        },\n      });\n      resetForm();\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Label htmlFor=\"name\">\n          Name:\n          <Field type=\"text\" name=\"name\" />\n        </Label>\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Label htmlFor=\"number\">\n          Number:\n          <Field type=\"tel\" name=\"number\" />\n        </Label>\n        <ErrorMessage name=\"number\" component=\"div\" />\n        <Button type=\"submit\">ADD CONTACT</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport { ContactForm };\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n  margin-bottom: 20px;\n  font-weight: 500;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/Contacts/filtersSlice';\nimport { selectFilterValue } from 'redux/Contacts/selectors';\n\nimport { Label } from './Filter.stuled';\n\nconst Filter = () => {\n  const value = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  const onFilterName = ({ target: { value } }) => {\n    dispatch(setFilterValue(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name:\n      <input type=\"text\" value={value} onChange={onFilterName} />\n    </Label>\n  );\n};\n\nexport { Filter };\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  font-size: 20px;\n  padding: 2px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 15px;\n  font-weight: 500;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  background-color: red;\n  transition: 250ms;\n  &:hover {\n    scale: 1.05;\n  }\n  &:active {\n    scale: 0.95;\n    background-color: blue;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFilteredContact,\n  selectLoading,\n  selectError,\n} from 'redux/Contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/Contacts/operations';\n\nimport { List, Item, Button } from './ContactList.styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContact);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const delContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {isLoading && !error && (\n        <ThreeDots\n          height=\"40\"\n          width=\"40\"\n          radius=\"9\"\n          color=\"#4fa94d\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      {/* {isLoading && !error && <div>Loading...</div>} */}\n      <List>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <span>{name}:</span>\n              <span>{number}</span>\n              <Button type=\"button\" onClick={() => delContact(id)}>\n                Delete\n              </Button>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport { ContactList };\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  padding: 10px;\n  text-align: center;\n  background-color: rgb(163, 244, 217);\n  border: 2px solid black;\n  border-radius: 10px;\n`;\n","import { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Container } from './Contacts.styled';\n\n// import { fetchContacts } from 'redux/Contacts/operations';\n// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n\nfunction Contacts() {\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilterValue","state","filter","selectContacts","contacts","items","selectLoading","isLoading","selectError","error","selectFilteredContact","toLowerCase","includes","Form","styled","FormikForm","ErrorMessage","Message","Label","Button","FormSchema","Yup","shape","matches","min","max","required","trim","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","resetForm","some","toast","style","background","color","addContact","htmlFor","type","component","Filter","onChange","target","setFilterValue","List","Item","ContactList","filteredContacts","useEffect","fetchContacts","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","id","onClick","deleteContact","delContact","Container"],"sourceRoot":""}