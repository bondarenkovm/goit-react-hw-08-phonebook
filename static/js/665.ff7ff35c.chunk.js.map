{"version":3,"file":"static/js/665.ff7ff35c.chunk.js","mappings":"wOAEaA,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,MAAV,EACzBC,EAAiB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,KAAnB,EACtBC,EAAgB,SAAAL,GAAK,OAAIA,EAAMG,SAASG,SAAnB,EACrBC,EAAc,SAAAP,GAAK,OAAIA,EAAMG,SAASK,KAAnB,EAEnBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACR,EAAgBH,IACjB,SAACI,EAAUF,GAET,OAAOE,EAASF,QAAO,qBAAGU,KACnBC,cAAcC,SAASZ,EAAOW,cADd,GAGxB,I,uCCXUE,GAAOC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2KASJE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6DAKZI,EAAQJ,EAAAA,EAAAA,MAAH,8GAOLK,EAASL,EAAAA,EAAAA,OAAH,0b,mBChBbM,EAAaC,EAAAA,KAAaC,MAAM,CACpCZ,KAAMW,EAAAA,KACHE,QACC,yHACA,wCAEDC,IAAI,EAAG,aACPC,IAAI,GAAI,YACRC,SAAS,YACTC,OACHC,OAAQP,EAAAA,KACLE,QACC,6EACA,kCAEDC,IAAI,EAAG,aACPC,IAAI,GAAI,YACRC,SAAS,YACTC,SAGCE,EAAc,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACX7B,GAAW8B,EAAAA,EAAAA,IAAY/B,GAiB7B,OACE,SAAC,KAAD,CACEgC,cAAe,CACbvB,KAAM,GACNkB,OAAQ,IAEVM,iBAAkBd,EAClBe,SAtBiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9B,GAAInC,EAASoC,MAAK,qBAAG5B,OAAoB0B,EAAO1B,IAA9B,IAQhB,OAPA6B,EAAAA,EAAAA,IAAM,GAAD,OAAIH,EAAO1B,KAAX,2BAA0C,CAC7C8B,MAAO,CACLC,WAAY,UACZC,MAAO,eAGXL,IAGFP,GAASa,EAAAA,EAAAA,IAAWP,IACpBC,GACD,EAGC,UAQE,UAACxB,EAAD,YACE,UAACK,EAAD,CAAO0B,QAAQ,OAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOnC,KAAK,aAE1B,SAACM,EAAD,CAAcN,KAAK,OAAOoC,UAAU,SACpC,UAAC5B,EAAD,CAAO0B,QAAQ,SAAf,qBAEE,SAAC,KAAD,CAAOC,KAAK,MAAMnC,KAAK,eAEzB,SAACM,EAAD,CAAcN,KAAK,SAASoC,UAAU,SACtC,SAAC3B,EAAD,CAAQ0B,KAAK,SAAb,6BAIP,E,UCtEY3B,EAAQJ,EAAAA,EAAAA,MAAH,8ICIZiC,EAAS,WACb,IAAMC,GAAQhB,EAAAA,EAAAA,IAAYlC,GACpBgC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAAC,EAAD,qCAEE,kBAAOc,KAAK,OAAOG,MAAOA,EAAOC,SAPhB,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChClB,GAASqB,EAAAA,EAAAA,GAAeH,GACzB,MAQF,E,UCjBYI,EAAOtC,EAAAA,EAAAA,GAAH,qIASJuC,EAAOvC,EAAAA,EAAAA,GAAH,2MAWJK,EAASL,EAAAA,EAAAA,OAAH,yT,UCVbwC,EAAc,WAClB,IAAMC,GAAmBvB,EAAAA,EAAAA,IAAYxB,GAC/BH,GAAY2B,EAAAA,EAAAA,IAAY5B,GACxBG,GAAQyB,EAAAA,EAAAA,IAAY1B,GACpBwB,GAAWC,EAAAA,EAAAA,OAEjByB,EAAAA,EAAAA,YAAU,WACR1B,GAAS2B,EAAAA,EAAAA,MACV,GAAE,CAAC3B,IAMJ,OACE,gCACGzB,IAAcE,IACb,SAAC,KAAD,CACEmD,OAAO,KACPC,MAAM,KACNC,OAAO,IACPlB,MAAM,UACNmB,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIb,SAACZ,EAAD,UACGG,EAAiBU,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIxD,EAAmB,EAAnBA,KAAMkB,EAAa,EAAbA,OACjC,OACE,UAACyB,EAAD,YACE,4BAAO3C,EAAP,QACA,0BAAOkB,KACP,SAAC,EAAD,CAAQiB,KAAK,SAASsB,QAAS,kBAzBxB,SAAAD,GACjBpC,GAASsC,EAAAA,EAAAA,IAAcF,GACxB,CAuBgDG,CAAWH,EAAjB,EAA/B,sBAHSA,EAQd,QAIR,ECtDYI,EAAYxD,EAAAA,EAAAA,IAAH,iPCyBtB,MAlBA,WAOE,OACE,UAACwD,EAAD,YACE,uCACA,SAACzC,EAAD,KACA,sCACA,SAACkB,EAAD,KACA,SAACO,EAAD,MAGL,C","sources":["redux/Contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.stuled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilterValue = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContact = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    // const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { Form as FormikForm, ErrorMessage as Message } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  padding: 5px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\nexport const ErrorMessage = styled(Message)`\n  color: red;\n  margin-left: auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 15px;\n  font-weight: 500;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  background-color: green;\n  transition: 250ms;\n  margin-left: auto;\n  margin-right: auto;\n  :hover {\n    scale: 1.05;\n  }\n  :active {\n    scale: 0.95;\n    background-color: blue;\n  }\n  :disabled {\n    background-color: red;\n    color: black;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { selectContacts } from 'redux/Contacts/selectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { Label, Button, Form, ErrorMessage } from './ContactForm.styled';\nimport { toast } from 'react-hot-toast';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'The name may contain only letters!!!'\n    )\n    .min(3, 'Too short')\n    .max(15, 'Too long')\n    .required('Required')\n    .trim(),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits!!!'\n    )\n    .min(5, 'Too short')\n    .max(10, 'Too long')\n    .required('Required')\n    .trim(),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (contacts.some(({ name }) => name === values.name)) {\n      toast(`${values.name} is alreary in contacts`, {\n        style: {\n          background: '#ca1616',\n          color: '#fff',\n        },\n      });\n      resetForm();\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <Label htmlFor=\"name\">\n          Name:\n          <Field type=\"text\" name=\"name\" />\n        </Label>\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Label htmlFor=\"number\">\n          Number:\n          <Field type=\"tel\" name=\"number\" />\n        </Label>\n        <ErrorMessage name=\"number\" component=\"div\" />\n        <Button type=\"submit\">ADD CONTACT</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport { ContactForm };\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n  margin-bottom: 20px;\n  font-weight: 500;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/Contacts/filtersSlice';\nimport { selectFilterValue } from 'redux/Contacts/selectors';\n\nimport { Label } from './Filter.stuled';\n\nconst Filter = () => {\n  const value = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  const onFilterName = ({ target: { value } }) => {\n    dispatch(setFilterValue(value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name:\n      <input type=\"text\" value={value} onChange={onFilterName} />\n    </Label>\n  );\n};\n\nexport { Filter };\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 15px;\n  font-size: 20px;\n  padding: 2px;\n  border: 1px solid black;\n  border-radius: 5px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 15px;\n  font-weight: 500;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  background-color: red;\n  transition: 250ms;\n  &:hover {\n    scale: 1.05;\n  }\n  &:active {\n    scale: 0.95;\n    background-color: blue;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFilteredContact,\n  selectLoading,\n  selectError,\n} from 'redux/Contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/Contacts/operations';\n\nimport { List, Item, Button } from './ContactList.styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContact);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const delContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      {isLoading && !error && (\n        <ThreeDots\n          height=\"40\"\n          width=\"40\"\n          radius=\"9\"\n          color=\"#4fa94d\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      {/* {isLoading && !error && <div>Loading...</div>} */}\n      <List>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <span>{name}:</span>\n              <span>{number}</span>\n              <Button type=\"button\" onClick={() => delContact(id)}>\n                Delete\n              </Button>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport { ContactList };\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  padding: 10px;\n  text-align: center;\n  background-color: rgb(163, 244, 217);\n  border: 2px solid black;\n  border-radius: 10px;\n`;\n","import { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Container } from './Contacts.styled';\n\n// import { fetchContacts } from 'redux/Contacts/operations';\n// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n\nfunction Contacts() {\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectFilterValue","state","filter","selectContacts","contacts","items","selectLoading","isLoading","selectError","error","selectFilteredContact","createSelector","name","toLowerCase","includes","Form","styled","FormikForm","ErrorMessage","Message","Label","Button","FormSchema","Yup","shape","matches","min","max","required","trim","number","ContactForm","dispatch","useDispatch","useSelector","initialValues","validationSchema","onSubmit","values","resetForm","some","toast","style","background","color","addContact","htmlFor","type","component","Filter","value","onChange","target","setFilterValue","List","Item","ContactList","filteredContacts","useEffect","fetchContacts","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","map","id","onClick","deleteContact","delContact","Container"],"sourceRoot":""}